// Generated by Apple Swift version 4.1.2 (swiftlang-902.0.54 clang-902.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PullToRefreshKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_PROTOCOL("_TtP16PullToRefreshKit17RefreshableFooter_")
@protocol RefreshableFooter
/// footer的高度
- (CGFloat)heightForFooter SWIFT_WARN_UNUSED_RESULT;
/// 不需要下拉加载更多的回调
- (void)didUpdateToNoMoreData;
/// 重新设置到常态的回调
- (void)didResetToDefault;
/// 结束刷新的回调
- (void)didEndRefreshing;
/// 已经开始执行刷新逻辑，在一次刷新中，只会调用一次
- (void)didBeginRefreshing;
/// 当Scroll触发刷新，这个方法返回是否需要刷新（比如你只想要点击刷新）
- (BOOL)shouldBeginRefreshingWhenScroll SWIFT_WARN_UNUSED_RESULT;
@end

@class NSCoder;
@class UITouch;
@class UIEvent;
@class UIColor;

SWIFT_CLASS("_TtC16PullToRefreshKit20DefaultRefreshFooter")
@interface DefaultRefreshFooter : UIView <RefreshableFooter>
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (CGFloat)heightForFooter SWIFT_WARN_UNUSED_RESULT;
- (void)didBeginRefreshing;
- (void)didEndRefreshing;
- (void)didUpdateToNoMoreData;
- (void)didResetToDefault;
- (BOOL)shouldBeginRefreshingWhenScroll SWIFT_WARN_UNUSED_RESULT;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
@end

enum RefreshResult : NSInteger;
enum RefreshHeaderState : NSInteger;

SWIFT_PROTOCOL("_TtP16PullToRefreshKit17RefreshableHeader_")
@protocol RefreshableHeader
/// 视图的高度
- (CGFloat)heightForHeader SWIFT_WARN_UNUSED_RESULT;
/// 进入刷新状态的回调，在这里将视图调整为刷新中
- (void)didBeginRefreshingState;
/// 刷新结束，将要进行隐藏的动画，一般在这里告诉用户刷新的结果
/// \param result 刷新结果
///
- (void)didBeginHideAnimation:(enum RefreshResult)result;
/// 刷新结束，隐藏的动画结束，一般在这里把视图隐藏，各个参数恢复到最初状态
/// \param result 刷新结果
///
- (void)didCompleteHideAnimation:(enum RefreshResult)result;
@optional
/// 状态改变
/// \param newState 新的状态
///
/// \param oldState 老得状态
///
- (void)stateDidChanged:(enum RefreshHeaderState)oldState newState:(enum RefreshHeaderState)newState;
/// 触发刷新的时候，距离顶部的高度，可选，如果没有实现，则默认触发刷新的距离就是 heightForHeader
- (CGFloat)heightForFireRefreshing SWIFT_WARN_UNUSED_RESULT;
/// 在刷新状态的时候，距离顶部的高度，默认是heightForHeader
- (CGFloat)heightForRefreshingState SWIFT_WARN_UNUSED_RESULT;
/// 不在刷新状态的时候，百分比回调，在这里你根据百分比来动态的调整你的刷新视图
/// \param percent 拖拽的百分比，比如一共距离是100，那么拖拽10的时候，percent就是0.1
///
- (void)percentUpdateDuringScrolling:(CGFloat)percent;
/// 刷新结束，隐藏header的时间间隔，默认0.4s
- (double)durationOfHideAnimation SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC16PullToRefreshKit20DefaultRefreshHeader")
@interface DefaultRefreshHeader : UIView <RefreshableHeader>
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (CGFloat)heightForHeader SWIFT_WARN_UNUSED_RESULT;
- (void)percentUpdateDuringScrolling:(CGFloat)percent;
- (void)stateDidChanged:(enum RefreshHeaderState)oldState newState:(enum RefreshHeaderState)newState;
- (double)durationOfHideAnimation SWIFT_WARN_UNUSED_RESULT;
- (void)didBeginHideAnimation:(enum RefreshResult)result;
- (void)didCompleteHideAnimation:(enum RefreshResult)result;
- (void)didBeginRefreshingState;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
@end

@class UIImageView;
@class UILabel;

SWIFT_CLASS("_TtC16PullToRefreshKit18DefaultRefreshLeft")
@interface DefaultRefreshLeft : UIView
+ (DefaultRefreshLeft * _Nonnull)left SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) UIImageView * _Nonnull imageView;
@property (nonatomic, readonly, strong) UILabel * _Nonnull textLabel;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (CGFloat)widthForComponent SWIFT_WARN_UNUSED_RESULT;
- (void)percentUpdateDuringScrolling:(CGFloat)percent;
- (void)didBeginRefreshing;
- (void)didCompleteHideAnimation;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
@end


SWIFT_CLASS("_TtC16PullToRefreshKit19DefaultRefreshRight")
@interface DefaultRefreshRight : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@property (nonatomic, strong) UIColor * _Null_unspecified tintColor;
@end


SWIFT_CLASS("_TtC16PullToRefreshKit21ElasticRefreshControl")
@interface ElasticRefreshControl : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
- (void)sizeToFit;
@end


SWIFT_CLASS("_TtC16PullToRefreshKit20ElasticRefreshHeader")
@interface ElasticRefreshHeader : UIView <RefreshableHeader>
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (CGFloat)heightForHeader SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)heightForFireRefreshing SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)heightForRefreshingState SWIFT_WARN_UNUSED_RESULT;
- (void)percentUpdateDuringScrolling:(CGFloat)percent;
- (void)didBeginRefreshingState;
- (void)didBeginHideAnimation:(enum RefreshResult)result;
- (void)didCompleteHideAnimation:(enum RefreshResult)result;
@end




SWIFT_CLASS("_TtC16PullToRefreshKit22RefreshHeaderContainer")
@interface RefreshHeaderContainer : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end

/// Header所处的状态
/// <ul>
///   <li>
///     Idle:        最初
///   </li>
///   <li>
///     Pulling:     下拉
///   </li>
///   <li>
///     Refreshing:  正在刷新中
///   </li>
///   <li>
///     WillRefresh: 将要刷新
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, RefreshHeaderState) {
  RefreshHeaderStateIdle = 0,
  RefreshHeaderStatePulling = 1,
  RefreshHeaderStateRefreshing = 2,
  RefreshHeaderStateWillRefresh = 3,
};

typedef SWIFT_ENUM(NSInteger, RefreshResult) {
  RefreshResultSuccess = 200,
  RefreshResultFailure = 400,
  RefreshResultNone = 0,
};



















#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
